import{C as u,P as l,S as h,D as m,M as _,b as d}from"./practice.setup.0dbf3b95.js";import{_ as r,d as v,r as f,n as p,g,h as s,i as c,j as i,k as x,l as C}from"./app.d44df62d.js";var y="uniform vec3 u_color;uniform vec2 u_mouse;uniform vec2 u_resolution;void main(){vec2 v=u_mouse/u_resolution;vec3 color=vec3(v.x,0.,v.y);gl_FragColor=vec4(color,1.0);}",w="void main(){gl_Position=projectionMatrix*modelViewMatrix*vec4(position*0.5,1.0);}";const M=v({__name:"practice.changeColor.mouse",setup(a){const n=f(null),o={u_time:{value:0},u_mouse:{value:{x:0,y:0}},u_resolution:{value:{x:0,y:0}},u_color:{value:new u(65520)}};let e=new d;return e.addObject=function(){this.geometry=new l(2,2),this.material=new h({uniforms:o,side:m,fragmentShader:y,vertexShader:w}),this.mesh=new _(this.geometry,this.material),this.scene.add(this.mesh)},e.animate=function(){if(this.render(),this.container.getBoundingClientRect().width>0)requestAnimationFrame(this.animate.bind(this));else return},e.move=function(t){o.u_mouse.value.x=t.touches?t.touches[0].clientX:t.clientX,o.u_mouse.value.y=t.touches?t.touches[0].clientY:t.clientY},"ontouchstart"in window?document.addEventListener("touchmove",e.move):document.addEventListener("mousemove",e.move),e.resize=function(){o.u_resolution!==void 0&&(o.u_resolution.value.x=this.width,o.u_resolution.value.y=this.height),this.camera.aspect=this.container.clientWidth/this.container.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.container.clientWidth,this.container.clientHeight),this.render()},p(()=>{const t={container:n.value||document.body};e.init(t)}),g(()=>{e.beforeDestroy()}),(t,j)=>(s(),c("div",{class:"practice_changeColor fullscreen",ref_key:"container",ref:n},null,512))}});var k=r(M,[["__file","practice.changeColor.mouse.vue"]]);const S={};function b(a,n){const o=k,e=C("ClientOnly");return s(),c("div",null,[i(e,null,{default:x(()=>[i(o)]),_:1})])}var D=r(S,[["render",b],["__file","changeColorMouse.html.vue"]]);export{D as default};
